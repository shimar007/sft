{"version":3,"sources":["variables/fonts.scss","variables/variables.scss","base/base.scss","vendor/rfs.scss","misc/breakpoints.scss","components/body-content.scss","components/footer.scss","components/header.scss","components/latest-news.scss"],"names":[],"mappings":"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","file":"index.css","sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:ital,wght@0,300;0,600;0,700;1,400&display=swap');",":root {\n    --bs-blue: #0d6efd;\n    --bs-indigo: #6610f2;\n    --bs-purple: #6f42c1;\n    --bs-pink: #d63384;\n    --bs-red: #dc3545;\n    --bs-orange: #fd7e14;\n    --bs-yellow: #ffc107;\n    --bs-green: #198754;\n    --bs-teal: #20c997;\n    --bs-cyan: #0dcaf0;\n    --bs-white: #fff;\n    --bs-gray: #6c757d;\n    --bs-gray-dark: #343a40;\n    --bs-gray-100: #f8f9fa;\n    --bs-gray-200: #e9ecef;\n    --bs-gray-300: #dee2e6;\n    --bs-gray-400: #ced4da;\n    --bs-gray-500: #adb5bd;\n    --bs-gray-600: #6c757d;\n    --bs-gray-700: #495057;\n    --bs-gray-800: #343a40;\n    --bs-gray-900: #212529;\n    --bs-primary: #0d6efd;\n    --bs-secondary: #6c757d;\n    --bs-success: #198754;\n    --bs-info: #0dcaf0;\n    --bs-warning: #ffc107;\n    --bs-danger: #dc3545;\n    --bs-light: #f8f9fa;\n    --bs-dark: #212529;\n    --bs-body-bg: #fff;\n    --font-source-sans-pro: 'Source Sans Pro', sans-serif;\n  }","html {\n    font-size: 62.5%;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    scroll-behavior: smooth;\n}\n\nbody {\n    @include font-size(1.8rem);\n    line-height: 1.278;\n    font-family: var(--font-source-sans-pro);\n    font-weight: 400;\n    margin: 0;\n}\n\nh1 {\n    @include font-size(4.5rem);\n    font-weight: 600;   \n}\n\nh2 {\n    @include font-size(4rem);\n    font-weight: 600;\n}\n\nh3 {\n    @include font-size(3rem);\n    font-weight: 600;\n    line-height: 1.1em;\n}\n\np {\n    color: var(--bs-dark);\n}\n\n.container {\n    display: flex;\n    flex-direction: row;\n    max-width: 1440px;\n    margin: 0 auto;\n    padding: 0 40px;\n    justify-content: space-between;\n\n    @include respond-to(large-desktop) {\n        max-width: 1160px;\n    }\n\n    @include respond-to(desktop) {\n        max-width: 960px;\n    }\n\n    @include respond-to(tablet) {\n        max-width: 720px;\n    }\n\n    @include respond-to(mobile-large) {\n        padding: 0 20px;\n    }\n}\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive values for font sizes, paddings, margins and much more\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/master/LICENSE)\n\n// Configuration\n\n// Base value\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1440px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\n$rfs-mode: max-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 10 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: unit($rfs-base-value);\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: $rfs-base-value / ($rfs-base-value * 0 + 1);\n}\n@else if $rfs-base-value-unit == rem {\n  $rfs-base-value: $rfs-base-value / ($rfs-base-value * 0 + 1 / $rfs-rem-value);\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);\n}\n\n// Calculate the media query value\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit});\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n  @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  }\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  }\n  @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: '';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + ' 0';\n    }\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val + ' ' + if($rfs-unit == rem, #{$value / ($value * 0 + $rfs-rem-value)}rem, $value);\n      }\n      @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val + ' ' + if($rfs-unit == px, #{$value / ($value * 0 + 1) * $rfs-rem-value}px, $value);\n      }\n      @else {\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + ' ' + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: '';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + ' 0';\n    }\n\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + ' ' + $value;\n      }\n\n      @else {\n        // Remove unit from $value for calculations\n        $value: $value / ($value * 0 + if($unit == px, 1, 1 / $rfs-rem-value));\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val + ' ' +  if($rfs-unit == rem, #{$value / $rfs-rem-value}rem, #{$value}px);\n        }\n        @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value + (abs($value) - $rfs-base-value) / $rfs-factor;\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if($rfs-unit == rem, #{$value-min / $rfs-rem-value}rem, #{$value-min}px);\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{$value-diff * 100 / $rfs-breakpoint}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val + ' calc(' + $min-width + if($value < 0, ' - ', ' + ') + $variable-width + ')';\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluidVal: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluidVal {\n      #{$property}: $val;\n    }\n    @else {\n      @include _rfs-rule {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluidVal);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule {\n        #{$property}: if($rfs-mode == max-media-query, $fluidVal, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}","$breakpoints: (\n    'mobile': 414px,\n    'mobile-large': 600px,\n    'tablet': 768px,\n    'desktop': 992px,\n    'ipad': 1024px,\n    'large-desktop': 1200px,\n    'extra-large-desktop': 1400px\n) !default;\n\n@mixin respond-to($breakpoint) {\n    @if map-has-key($breakpoints, $breakpoint) {\n        @media (max-width: map-get($breakpoints, $breakpoint)) {\n            @content;\n        }\n    }\n\n    // If the key doesn't exist in the map\n    @else {\n        @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n            + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\n    }\n}\n",".main-content-body {\n    width: calc(75% - 20px);\n\n    .main-content-intro {\n        height: 100px;\n        background-color: var(--bs-info);\n        width: 100%;\n    }\n\n    .main-content-inner-body {\n        width: 100%;\n    }\n}\n\n.sidebar {\n    width: calc(25%);\n    background-color: var(--bs-light);\n}\n",".footer {\n    width: 100%;\n    height: 100px;\n    display: flex;\n    background: var(--bs-gray-600);\n    margin-bottom: 20px;\n}",".header {\n    width: 100%;\n    height: 100px;\n    display: flex;\n    background: var(--bs-gray-600);\n    margin-bottom: 20px;\n}",".latest-news {\n    margin: 20px 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n\n    .latest-news-item {\n        display: flex;\n        width: 100%;\n        text-decoration: none;\n\n        h3 {\n            text-transform: uppercase;\n            color: var(--bs-dark);\n            margin: 10px 0;\n        }\n    }\n\n    .latest-news-item-image {\n        background-repeat: no-repeat;\n        background-size: cover;\n        background-position: center;\n    }\n\n    .latest-news-left {\n        width: 50%;\n        padding-right: 10px;\n\n        .latest-news-item {\n            h3 {\n                @include font-size(4rem);\n            }\n        }\n\n        .latest-news-item-image {\n            min-height: 500px;\n        }\n    }\n\n    .latest-news-right {\n        width: 50%;\n        padding-left: 10px;\n\n        h3 {\n            text-transform: initial;\n            color: var(--bs-gray-600);\n        }\n\n        .latest-news-description {\n            display: none;\n        }\n\n        .latest-news-item {\n            &:first-of-type {\n\n                h3 {\n                    @include font-size(3.5rem);\n                    color: var(--bs-dark);\n                }\n\n                .latest-news-item-image {\n                    min-height: 350px;\n                }\n\n                .latest-news-description {\n                    display: block;\n                }\n            }\n        }\n    }\n}"]}